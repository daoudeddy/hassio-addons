name: Build ZeroNS from latest release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    
    outputs:
      run_build: ${{ steps.run_build.outputs.run_build }}
      release_tag: ${{ steps.zeronsd.outputs.tag }}
      
    steps:
    - uses: oprypin/find-latest-tag@v1
      id: zerons-addon
      with:
        repository: daoudeddy/zerons-addon
        releases-only: true
    - uses: oprypin/find-latest-tag@v1
      id: zeronsd
      with:
        repository: zerotier/zeronsd
        releases-only: true
      env:
        TAG: ${{ steps.zeronsd.outputs.tag }}
      
    - run: echo "ZeroNS is at version ${{ steps.zeronsd.outputs.tag }}"
    - run: echo "ZeroNS-Addon is at version ${{ steps.zerons-addon.outputs.tag }}"
    
    - run: echo "release.tag=${{ steps.zeronsd.outputs.tag }}" >> $GITHUB_ENV
    - run: echo "ZeroNS-Addon is at version ${{ env.TAG }}"

    - name: Create Release
      if: ${{ steps.zeronsd.outputs.tag != steps.zerons-addon.outputs.tag }}
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.zeronsd.outputs.tag }}
        release_name: ZeroNS ${{ steps.zeronsd.outputs.tag }}
        draft: false
        prerelease: false
        
    - name: Set output
      id: run_build
      run: echo "::set-output name=run_build::${{ steps.zeronsd.outputs.tag != steps.zerons-addon.outputs.tag }}"
      
  build:
    needs: release
    if: needs.release.outputs.run_build == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: aarch64
            target: aarch64-unknown-linux-gnu
            cross: true
          - name: armv7
            target: armv7-unknown-linux-gnueabihf
            cross: true
          - name: i686
            target: i686-unknown-linux-gnu 
            cross: true
          - name: x86_64
            target: x86_64-unknown-linux-gnu 
            cross: false

    steps:
      - run: echo ${{ needs.release.outputs.release_tag }}
      
      - uses: actions/checkout@v3
        with:
          repository: 'daoudeddy/zeronsd'
#           ref: ${{  needs.release.outputs.release_tag }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: ${{ matrix.cross }}
          target: ${{ matrix.target }}
          
      - uses: Swatinem/rust-cache@v1
      
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.cross }}
          command: build
          args: --release --target ${{ matrix.target }}
          
      - name: Package
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../zeronsd-${{  needs.release.outputs.release_tag }}-${{ matrix.name }}.tar.gz zeronsd
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{  needs.release.outputs.release_tag }}
            files: 'zeronsd-${{  needs.release.outputs.release_tag }}-${{ matrix.name }}.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
