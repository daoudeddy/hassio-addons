name: Build ZeroNS from latest release

on:
#  schedule:
#    - cron: '0 12 * * 1,3,5'
  workflow_dispatch:
  
env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    name: Create Github Release
    runs-on: ubuntu-latest
    
    outputs:
      run_build: ${{ steps.run_build.outputs.run_build }}
      release_tag: ${{ steps.zeronsd.outputs.tag }}
      release_id: ${{ steps.zeronsd.outputs.id }}
      
    steps:
    - name: Get latest release on this repo
      uses: oprypin/find-latest-tag@v1
      id: zerons-addon
      with:
        repository: daoudeddy/zerons-addon
        releases-only: true
        
    - name: Get latest release on ZeroNS repo
      uses: oprypin/find-latest-tag@v1
      id: zeronsd
      with:
        repository: zerotier/zeronsd
        releases-only: true

    - name: Create release if ZeroNS has a new tag
      if: ${{ steps.zeronsd.outputs.tag != steps.zerons-addon.outputs.tag }}
      id: create_release
      uses: actions/create-release@v1.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.zeronsd.outputs.tag }}
        release_name: ZeroNS ${{ steps.zeronsd.outputs.tag }}
        draft: false
        prerelease: false
        
    - name: Set output
      id: run_build
      run: echo "::set-output name=run_build::${{ steps.zeronsd.outputs.tag != steps.zerons-addon.outputs.tag }}"
      
  build:
    needs: release
    if: needs.release.outputs.run_build == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: aarch64
            target: aarch64-unknown-linux-musl
            toolchain: aarch64-linux-musl-cross.tgz
            cc: aarch64-linux-musl-gcc
#           - name: armv7
#             target: armv7-unknown-linux-musleabihf
#             toolchain: arm-linux-musleabihf-cross.tgz
#             cc: arm-linux-musl-gcc
          - name: i386
            target: i686-unknown-linux-musl
            toolchain: i686-linux-musl-cross.tgz
            cc: i686-linux-musl-gcc
          - name: amd64
            target: x86_64-unknown-linux-musl
            toolchain: x86_64-linux-musl-cross.tgz
            cc: x86_64-linux-musl-gcc

    steps:      
      - uses: actions/checkout@v3
        with:
          repository: 'zerotier/zeronsd'
          #ref: ${{ needs.release.outputs.release_tag }}
      
      - uses: actions/checkout@v3
        with:
          repository: 'daoudeddy/zeronsd'
          #ref: ${{ needs.release.outputs.release_tag }}
      - name: Install dependencies  
        run: sudo apt-get install musl-tools
      - name: Add rust toolchain
        run: rustup target add ${{ matrix.target }}
      - name: Download toolchain
        run: wget https://musl.cc/${{ matrix.toolchain }}
      - name: Create toolchain directory
        run: mkdir ${HOME}/toolchain-${{ matrix.name }}
      - name: Extract toolchain
        run: tar xvf ${{ matrix.toolchain }} --strip-components=1 -C ${HOME}/toolchain-${{ matrix.name }}
        
      - name: Export toolchain to PATH
        run: echo "${HOME}/toolchain-${{ matrix.name }}/bin" >> $GITHUB_PATH
      
      - name: build
        env:
          PKG_CONFIG_SYSROOT_DIR: "/"
          PKG_CONFIG_ALLOW_CROSS: 1
          RUSTFLAGS: "-Clinker=rust-lld"
        run: cargo build --target ${{ matrix.target }} --features vendored-openssl --release

      - name: Package Cross
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release          
          tar czvf ../../../zeronsd-${{ matrix.name }}.tar.gz zeronsd
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            tag_name: ${{ needs.release.outputs.release_tag }}
            files: 'zeronsd-${{ matrix.name }}.tar.gz'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
